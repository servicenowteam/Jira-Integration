<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="DELETE">
        <category>custom</category>
        <client_script><![CDATA[function() {  /* widget controller */  var c = this;}]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>jira_create_issue_v2</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Jira Create Issue V2</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function () {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */
  data.table = options.table || $sp.getParameter('table') || 'x_momo_jira_integr_issue';
  data.issueType = options.issueType || $sp.getParameter('request_type');
  data.sys_id = (input ? input.sys_id : undefined);

  if (!input) {
    data.steps = createUISteps(data.issueType);
  }



  function createUISteps(issueType) {
    return [{
      sequence: 1,
      title: createTitleFromIssueType(1, parseInt(issueType)),
      expanded: true,
      fields: [{
        column: 'project',
        type: 'dropdown',
        field: {
          name: 'project',
          displayValue: '',
          value: null
        }
      }]
    }, {
      sequence: 2,
      title: createTitleFromIssueType(2, parseInt(issueType)),
      expanded: false,
      fields: createFieldsFromIssueType(2, parseInt(issueType))
    }, {
      sequence: 3,
      title: createTitleFromIssueType(3, parseInt(issueType)),
      expanded: false,
      fields: createFieldsFromIssueType(3, parseInt(issueType))
    }, {
      sequence: 4,
      title: "Almost done!",
      expanded: false,
      attachments: {
        title: 'Drop or add screenshots, and documents here.'
      }
    }];
  }

  function createTitleFromIssueType(sequence, issueType) {
    var TITLE_MAP = {
      1: {
        1: 'What team does this problem involve?',
        2: 'What team might this feature involve?',
        3: 'What team might this project involve?'
      },
      2: {
        1: 'Describe the feature in detail',
        3: 'Describe the new project in detail',
        2: 'Give a detailed description of the problem'
      },
      3: {
        1: "Let's get some other details!",
        2: "Let's get some other details!",
        3: "Let's get some other details!"
      }
    };
    return TITLE_MAP[sequence][issueType];
  }

  function createFieldsFromIssueType(sequence, issueType) {
    var FIELD_MAP = {
      2: {
        1: [{
          column: 'short_description',
          type: 'text',
          label: 'Short Description',
          field: {
            name: 'short_description',
            value: null
          }
        }, {
          column: 'description',
          type: 'markdown',
          label: 'Details of problem you are experiencing',
          field: {
            name: 'description',
            value: null
          }
        }],
        2: [{
          column: 'short_description',
          type: 'text',
          label: 'Short Description',
          field: {
            name: 'short_description',
            value: null
          }
        }, {
          column: 'description',
          type: 'markdown',
          label: 'Details of new feature',
          field: {
            name: 'description',
            value: null
          }
        }],
        3: [{
          column: 'project_name',
          type: 'text',
          label: 'Project Name',
          field: {
            name: 'project_name',
            value: null
          }
        }, {
          column: 'short_description',
          type: 'text',
          label: 'Short Description',
          field: {
            name: 'short_description',
            value: null
          }
        }, {
          column: 'description',
          type: 'markdown',
          label: 'Details of the new project',
          field: {
            name: 'description',
            value: null
          }
        }]
      },
      3: {
        1: [{
          column: 'priority',
          type: 'select',
          field: {
            name: 'priority'
          }
        }]
      }
    };

    return FIELD_MAP[sequence][issueType];
  }

  function getIssueOrStatusType(table, projectSysID, requestName, issueType) {
    var type = new GlideRecord(table);
    var query = 'nameSTARTSWITH' + requestName;

    if (issueType && issueType !== '') {
      query += '^issue_type=' + issueType;
    } else {
      query += '^project=' + projectSysID;
    }
    type.addEncodedQuery(query);
    type.query();
    while (type.next()) {
      return type.getUniqueValue();
    }
  }
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>douglas.schamberg@movement.com</sys_created_by>
        <sys_created_on>2020-09-03 11:11:52</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>68b2bc99db471490f255132968961916</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>Jira Create Issue V2</sys_name>
        <sys_package display_value="Jira Integration" source="x_momo_jira_integr">ec964aa3dbd2c810f25513296896194c</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Jira Integration">ec964aa3dbd2c810f25513296896194c</sys_scope>
        <sys_update_name>sp_widget_68b2bc99db471490f255132968961916</sys_update_name>
        <sys_updated_by>douglas.schamberg@movement.com</sys_updated_by>
        <sys_updated_on>2020-09-03 11:41:23</sys_updated_on>
        <template><![CDATA[<div><!-- your widget template --></div>]]></template>
    </sp_widget>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="Jira Integration">ec964aa3dbd2c810f25513296896194c</application>
        <file_path/>
        <instance_id>94e8281edbb7470060a6f0e5bf9619f6</instance_id>
        <instance_name>movementdev</instance_name>
        <name>sp_widget_68b2bc99db471490f255132968961916</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;custom&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function() {  /* widget controller */  var c = this;}]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css/&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list/&gt;&lt;has_preview&gt;false&lt;/has_preview&gt;&lt;id&gt;jira_create_issue_v2&lt;/id&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link&gt;&lt;![CDATA[function link(scope, element, attrs, controller) {  }]]&gt;&lt;/link&gt;&lt;name&gt;Jira Create Issue V2&lt;/name&gt;&lt;option_schema/&gt;&lt;public&gt;false&lt;/public&gt;&lt;roles/&gt;&lt;script&gt;&lt;![CDATA[(function () {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */
  data.table = options.table || $sp.getParameter('table') || 'x_momo_jira_integr_issue';
  data.issueType = options.issueType || $sp.getParameter('request_type');
  data.sys_id = (input ? input.sys_id : undefined);

  if (!input) {
    data.steps = createUISteps(data.issueType);
  }



  function createUISteps(issueType) {
    return [{
      sequence: 1,
      title: createTitleFromIssueType(1, parseInt(issueType)),
      expanded: true,
      fields: [{
        column: 'project',
        type: 'dropdown',
        field: {
          name: 'project',
          displayValue: '',
          value: null
        }
      }]
    }, {
      sequence: 2,
      title: createTitleFromIssueType(2, parseInt(issueType)),
      expanded: false,
      fields: createFieldsFromIssueType(2, parseInt(issueType))
    }, {
      sequence: 3,
      title: createTitleFromIssueType(3, parseInt(issueType)),
      expanded: false,
      fields: createFieldsFromIssueType(3, parseInt(issueType))
    }, {
      sequence: 4,
      title: "Almost done!",
      expanded: false,
      attachments: {
        title: 'Drop or add screenshots, and documents here.'
      }
    }];
  }

  function createTitleFromIssueType(sequence, issueType) {
    var TITLE_MAP = {
      1: {
        1: 'What team does this problem involve?',
        2: 'What team might this feature involve?',
        3: 'What team might this project involve?'
      },
      2: {
        1: 'Describe the feature in detail',
        3: 'Describe the new project in detail',
        2: 'Give a detailed description of the problem'
      },
      3: {
        1: "Let's get some other details!",
        2: "Let's get some other details!",
        3: "Let's get some other details!"
      }
    };
    return TITLE_MAP[sequence][issueType];
  }

  function createFieldsFromIssueType(sequence, issueType) {
    var FIELD_MAP = {
      2: {
        1: [{
          column: 'short_description',
          type: 'text',
          label: 'Short Description',
          field: {
            name: 'short_description',
            value: null
          }
        }, {
          column: 'description',
          type: 'markdown',
          label: 'Details of problem you are experiencing',
          field: {
            name: 'description',
            value: null
          }
        }],
        2: [{
          column: 'short_description',
          type: 'text',
          label: 'Short Description',
          field: {
            name: 'short_description',
            value: null
          }
        }, {
          column: 'description',
          type: 'markdown',
          label: 'Details of new feature',
          field: {
            name: 'description',
            value: null
          }
        }],
        3: [{
          column: 'project_name',
          type: 'text',
          label: 'Project Name',
          field: {
            name: 'project_name',
            value: null
          }
        }, {
          column: 'short_description',
          type: 'text',
          label: 'Short Description',
          field: {
            name: 'short_description',
            value: null
          }
        }, {
          column: 'description',
          type: 'markdown',
          label: 'Details of the new project',
          field: {
            name: 'description',
            value: null
          }
        }]
      },
      3: {
        1: [{
          column: 'priority',
          type: 'select',
          field: {
            name: 'priority'
          }
        }]
      }
    };

    return FIELD_MAP[sequence][issueType];
  }

  function getIssueOrStatusType(table, projectSysID, requestName, issueType) {
    var type = new GlideRecord(table);
    var query = 'nameSTARTSWITH' + requestName;

    if (issueType &amp;&amp; issueType !== '') {
      query += '^issue_type=' + issueType;
    } else {
      query += '^project=' + projectSysID;
    }
    type.addEncodedQuery(query);
    type.query();
    while (type.next()) {
      return type.getUniqueValue();
    }
  }
})();]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;douglas.schamberg@movement.com&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-09-03 11:11:52&lt;/sys_created_on&gt;&lt;sys_customer_update&gt;false&lt;/sys_customer_update&gt;&lt;sys_id&gt;68b2bc99db471490f255132968961916&lt;/sys_id&gt;&lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;&lt;sys_name&gt;Jira Create Issue V2&lt;/sys_name&gt;&lt;sys_package display_value="Jira Integration" source="x_momo_jira_integr"&gt;ec964aa3dbd2c810f25513296896194c&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_replace_on_upgrade&gt;false&lt;/sys_replace_on_upgrade&gt;&lt;sys_scope display_value="Jira Integration"&gt;ec964aa3dbd2c810f25513296896194c&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_68b2bc99db471490f255132968961916&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;douglas.schamberg@movement.com&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-09-03 11:41:23&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;div&gt;&lt;!-- your widget template --&gt;&lt;/div&gt;]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload>
        <payload_hash>929777794</payload_hash>
        <record_name>Jira Create Issue V2</record_name>
        <reverted_from/>
        <source>e4964aa3dbd2c810f25513296896194f</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>douglas.schamberg@movement.com</sys_created_by>
        <sys_created_on>2020-09-03 11:41:23</sys_created_on>
        <sys_id>b479f4d1db871490f255132968961980</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>17453c576490000001</sys_recorded_at>
        <sys_updated_by>douglas.schamberg@movement.com</sys_updated_by>
        <sys_updated_on>2020-09-03 11:41:23</sys_updated_on>
        <type>Widget</type>
        <update_guid>7c79f4d1538714900aab3cf37c4c067f</update_guid>
        <update_guid_history>7c79f4d1538714900aab3cf37c4c067f:929777794,20b2bc99254714905378263bd0d5a218:-6106544</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete display_value="">474afc55db871490f255132968961904</sys_audit_delete>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>douglas.schamberg@movement.com</sys_created_by>
        <sys_created_on>2020-09-03 11:45:05</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_db_object display_value="" name="sp_widget">sp_widget</sys_db_object>
        <sys_id>845f97f9effc4aa2acd9648cd58d4de4</sys_id>
        <sys_metadata>68b2bc99db471490f255132968961916</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Jira Create Issue V2</sys_name>
        <sys_package display_value="Jira Integration" source="x_momo_jira_integr">ec964aa3dbd2c810f25513296896194c</sys_package>
        <sys_parent/>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Jira Integration">ec964aa3dbd2c810f25513296896194c</sys_scope>
        <sys_scope_delete display_value="">8ead14e9a7a04eb2a355afeaa4c6cb24</sys_scope_delete>
        <sys_update_name>sp_widget_68b2bc99db471490f255132968961916</sys_update_name>
        <sys_update_version display_value="sp_widget_68b2bc99db471490f255132968961916">b479f4d1db871490f255132968961980</sys_update_version>
        <sys_updated_by>douglas.schamberg@movement.com</sys_updated_by>
        <sys_updated_on>2020-09-03 11:45:05</sys_updated_on>
    </sys_metadata_delete>
</record_update>
