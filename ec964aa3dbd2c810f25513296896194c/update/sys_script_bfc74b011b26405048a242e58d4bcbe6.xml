<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_momo_jira_integr_issue_type</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_momo_jira_integr_issue_type">projectISNOTEMPTY^EQ<item endquery="false" field="project" goto="false" newquery="false" operator="ISNOTEMPTY" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Insert Status from Issue Type</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {
  gs.include('JiraRequestV2');
  var request = new JiraRequestV2();
  var issue_external_id = current.getValue('external_id');

  var project = current.project.getRefRecord();

  if (project.external_id.nil()) return;

  var response = request.send({
    path: 'project/' + project.getValue('external_id') + '/statuses'
  }).getResponse(function (results) {
    if (!Array.isArray(results)) return [];
    return results;
  });

  var statuses = transformStatusResults(response, issue_external_id);


  function transformStatusResults(results, externalId) {
    if (results.length === 0) return [];
    var host = gs.getProperty('x_momo_jira_integr.instance_name') + '/';
    var issueType = results.filter(function (item) {
      return item.id === externalId;
    })[0];

    return issueType.statuses.map(function (status) {
      return {
        external_id: status.id,
        name: status.name,
        description: status.description,
        icon: status.iconUrl !== host ? status.iconUrl : ''
      };
    });
  }

  var alreadyExistsInTable = [];
  var gStatus = new GlideRecord('x_momo_jira_integr_status');
  gStatus.addQuery('issue_type', current.getUniqueValue());
  gStatus.query();
  while (gStatus.next()) {
    alreadyExistsInTable.push(gStatus.getValue('external_id'));
  }

  statuses.forEach(function (status) {
    var instance = new GlideRecord('x_momo_jira_integr_status');
    instance.initialize();

    var keys = Object.keys(status);

    if (alreadyExistsInTable.indexOf(status.external_id) < 0) {
      for (var i in keys) {
        instance[keys[i]] = status[keys[i]];
      }
      instance.issue_type = current.sys_id.toString();
      instance.insert();
    }
  });
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>douglas.schamberg@movement.com</sys_created_by>
        <sys_created_on>2020-01-23 10:42:56</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>bfc74b011b26405048a242e58d4bcbe6</sys_id>
        <sys_mod_count>17</sys_mod_count>
        <sys_name>Insert Status from Issue Type</sys_name>
        <sys_overrides/>
        <sys_package display_value="Jira Integration" source="x_momo_jira_integr">ec964aa3dbd2c810f25513296896194c</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Jira Integration">ec964aa3dbd2c810f25513296896194c</sys_scope>
        <sys_update_name>sys_script_bfc74b011b26405048a242e58d4bcbe6</sys_update_name>
        <sys_updated_by>Adrian.Wilson</sys_updated_by>
        <sys_updated_on>2022-09-15 17:58:17</sys_updated_on>
        <template/>
        <when>async_always</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=bfc74b011b26405048a242e58d4bcbe6"/>
</record_update>
