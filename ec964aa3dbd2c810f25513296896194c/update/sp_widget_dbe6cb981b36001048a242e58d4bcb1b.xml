<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function buttonTopList($scope, nowAttachmentHandler, spUtil, spAriaUtil, $rootScope, spModal, $log, $document) {
  /* widget controller */
  var c = this;
  $scope.data.action = "";
  $scope.errorMessages = [];
  $scope.attachmentHandler = new nowAttachmentHandler(setAttachments, appendError);
  $scope.buttons = $scope.data.buttons;

  $scope.$on('sp.record.can_write', function (evt, answer) {
    $scope.data.canWrite = answer;
  });

  $scope.canWrite = function () {
    return $scope.data.canWrite;
  };
  $rootScope.$on('jira.watch-list.updated', function () {
    $scope.server.update().then(function (response) {
      $scope.buttons = response.buttons;
    })
  })
  $scope.fireLinkIssueClicked = function (e) {
    $rootScope.$broadcast('jira.linked-issue.clicked', {
      id: 'jira-linked-issue-form',
      input: {
        sys_id: $scope.data.sys_id,
        table: $scope.data.table
      },
      buttons: [{
        label: 'Done',
        primary: true
      }]
    });
  };

  $scope.fireWatchListClicked = function (e) {
    $rootScope.$broadcast('jira.watch-list.clicked', {
      id: 'jira-watch-list-form',
      input: {
        watch_list: $scope.data.watch_list,
        table: $scope.data.table,
        sys_id: $scope.data.sys_id
      },
      buttons: [{
        label: 'Save',
        primary: true,
        focus: true
      }, {
        label: 'Cancel',
        cancel: true
      }]
    });
  }

  spUtil.recordWatch($scope, "sys_attachment", "table_sys_id=" + $scope.data.sys_id, function (response, data) {
    $scope.attachmentHandler.getAttachmentList();
    if (response.data) {
      var options = {};
      options.operation = response.data.operation;
      options.filename = response.data.display_value;
      options.sys_id = $scope.data.sys_id;
      options.table = $scope.data.table;
      options.state = (response.data.record && response.data.record.state) ? response.data.record.state.value : "";
      //broadcast only if operation is update...we don't need insert and other record updates for now

      if (options.operation === "update" && options.state === "not_available") {
        $rootScope.$broadcast("attachment.updated", options);
      } else if (options.operation === 'insert') {
        $rootScope.$broadcast('added_attachment', options);
      }
    }
  });

  $scope.confirmDeleteAttachment = function (attachment) {
    var appendTo = $scope.data.appendToId ? $document.find('#' + $scope.data.appendToId) : null;
    spModal.confirm("${Delete Attachment?}", appendTo).then(function () {
      $scope.attachment_deleted_filename = attachment.file_name;
      $scope.attachmentHandler.deleteAttachment(attachment);
    });
  };

  $scope.$on('dialog.upload_too_large.show', function (e) {
    $log.error($scope.data.largeAttachmentMsg);
    spUtil.addErrorMessage($scope.data.largeAttachmentMsg);
  });

  $scope.$on('added_attachment', function (evt) {
    $scope.data.action = "added";
    spUtil.update($scope);
  });

  $scope.$evalAsync(function () {
    $scope.attachmentHandler.setParams($scope.data.table, $scope.data.sys_id, 1024 * 1024 * $scope.data.maxAttachmentSize);
    $scope.attachmentHandler.getAttachmentList();
  });

  function appendError(error) {
    $scope.errorMessages.push(error);
    spUtil.addErrorMessage(error.msg + error.fileName);
  }

  function setAttachments(attachments, action) {
    if ($scope.submitting == true)
      return;

    $scope.attachments = attachments;
    if (!action)
      return;

    if (action === "added") {
      spAriaUtil.sendLiveMessage($scope.data.attachmentSuccessMsg);
    }

    $scope.data.action = action;
    $scope.data.deleted_filename = $scope.attachment_deleted_filename;
    spUtil.update($scope).then(function (results) {
      $scope.attachment_deleted_filename = undefined;
    });
  }

}]]></client_script>
        <controller_as>c</controller_as>
        <css>.panel-button.btn.btn-link {&#13;
  -webkit-box-align: baseline;&#13;
  align-items: baseline;&#13;
  box-sizing: border-box;&#13;
  font-size: inherit;&#13;
  font-style: normal;&#13;
  font-weight: normal;&#13;
  max-width: 100%;&#13;
  text-align: center;&#13;
  white-space: nowrap;&#13;
  cursor: default;&#13;
  height: 2.28571em;&#13;
  line-height: 2.28571em;&#13;
  vertical-align: middle;&#13;
  width: auto;&#13;
  border-width: 0px;&#13;
  text-decoration: none;&#13;
  background: rgba(9, 30, 66, 0.04);&#13;
  border-radius: 3px;&#13;
  padding: 0px 8px;&#13;
  transition: all 0.1s ease-out 0s, box-shadow 0.15s cubic-bezier(0.47, 0.03, 0.49, 1.38) 0s;&#13;
  outline: none !important;&#13;
  float: left;&#13;
  margin-left: 5px;&#13;
&#13;
  &amp;:hover,&#13;
  &amp;:focus {&#13;
    outline: 5px auto rgba(9, 30, 66, 0.7);&#13;
    border: 1px solid rgba(9, 30, 66, 0.6);&#13;
    box-shadow: none;&#13;
    transition: 0.4s;&#13;
  }&#13;
&#13;
  &amp;:not(:focus) {&#13;
    outline: none !important;&#13;
    border: 1px solid transparent;&#13;
    transition: 0.4s;&#13;
  }&#13;
}&#13;
&#13;
.btn-text-inner {&#13;
  margin-left: 5px;&#13;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>form-top-button-list</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) { 

 }]]></link>
        <name>Jira Form Button List</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function () {
  data.sys_id = (input ? input.sys_id : undefined) || options.record_id || $sp.getParameter("sys_id");
  data.table = (input ? input.table : undefined) || options.record_table || $sp.getParameter("table");
  data.appendToId = options.appendToId;
  data.table = _getActualTable(data.table, data.sys_id);
  data.maxAttachmentSize = parseInt(gs.getProperty("com.glide.attachment.max_size", 1024));
  if (isNaN(data.maxAttachmentSize))
    data.maxAttachmentSize = 24;
  data.largeAttachmentMsg = gs.getMessage("Attached files must be smaller than {0} - please try again", "" + data.maxAttachmentSize + "MB");
  data.attachmentSuccessMsg = gs.getMessage("Attachment successfully uploaded");
  if (!data.table || !data.sys_id)
    return;

  var gr = new GlideRecord(data.table);
  if (!gr.isValid())
    return;

  if (!gr.get(data.sys_id))
    return;

  if (input && input.action == "deleted" && input.deleted_filename) {
    gr.work_notes = gs.getUserDisplayName() + " deleted " + input.deleted_filename + " from this ticket.";
    gr.update();
  }

  data.canWrite = canWrite(gr);
  data.linked_issues = {};
  data.linked_issues.canWrite = canWrite(gr) && gs.hasRole('x_momo_jira_integr.issue_tech');
  data.canAttach = gs.hasRole(gs.getProperty("glide.attachment.role")) && gr.getValue('active') == true;
  data.canRead = gr.canRead();
  data.watch_list = {
    name: 'watch_list'
  };
  data.watch_list.displayValue = gr.getDisplayValue('watch_list');
  data.watch_list.value = gr.getValue('watch_list');
  var watchList = gr.getValue('watch_list');
  data.watchListCount = getWatchListCount(watchList);

  function canWrite(rec) {
    return (rec.getValue('active') == true 
      && rec.getValue('approval') == 'approved'
      && rec.canWrite());
  }

  function getWatchListCount(watchList) {

    if (/,/gi.test(watchList)) {
      watchList = watchList.split(',');
      return watchList.length;
    }
    if (!watchList || watchList == '') return 0;
    return 1;
  }

  function _getActualTable(table, id) {
    if (!table)
      return table;

    var rec = new GlideRecord(table);
    if (!rec.isValid())
      return table;

    if (rec.get(id) && rec.getValue('sys_class_name')) {
      return rec.getValue('sys_class_name');
    }
    return table;
  }
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>douglas.schamberg</sys_created_by>
        <sys_created_on>2020-02-02 12:58:43</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>dbe6cb981b36001048a242e58d4bcb1b</sys_id>
        <sys_mod_count>92</sys_mod_count>
        <sys_name>Jira Form Button List</sys_name>
        <sys_package display_value="Jira Integration" source="x_momo_jira_integr">ec964aa3dbd2c810f25513296896194c</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Jira Integration">ec964aa3dbd2c810f25513296896194c</sys_scope>
        <sys_update_name>sp_widget_dbe6cb981b36001048a242e58d4bcb1b</sys_update_name>
        <sys_updated_by>douglas.schamberg@movement.com</sys_updated_by>
        <sys_updated_on>2020-07-16 17:05:41</sys_updated_on>
        <template><![CDATA[<span class="file-upload-input">
  <input type="file" style="display: none" multiple="true" ng-disabled="!data.canAttach"
    ng-file-select="attachmentHandler.onFileSelect($files)" class="sp-attachments-input">
  <button title="Add attachment" ng-click="attachmentHandler.openSelector($event)" ng-disabled="!data.canAttach"
    class="sp-attachment-add panel-button btn btn-link" aria-label="Add attachment">
    <span class="glyphicon glyphicon-paperclip"></span><span class="btn-text-inner">Attach</span>
  </button>
</span>
<button class="panel-button btn btn-link" ng-click="fireLinkIssueClicked($event)" ng-disabled="!data.linked_issues.canWrite">
  <span class="glyphicon glyphicon-link"></span><span class="btn-text-inner">Link Issue</span>
</button>
<button class="panel-button btn btn-link" ng-click="fireWatchListClicked($event)" ng-disabled="!data.canWrite">
  <span class="glyphicon glyphicon-eye-open"></span><span class="btn-text-inner" ng-if="data.watchListCount > 0"
    ng-bind="data.watchListCount"></span>
</button>]]></template>
    </sp_widget>
</record_update>
